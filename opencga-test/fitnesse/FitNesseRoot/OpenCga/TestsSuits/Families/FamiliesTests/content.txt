!define TEST_SYSTEM {slim}
!define file {4}

!3 Generate Random Variables 
!|Table: Rest Fixture | $baseURL |
|let|familyName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|familyName2|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|fatherName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|motherName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|updatedName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|iName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|vsName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||
|let|asName|js|Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 5)||

!3 Create Individual
!|Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$iName"}|
| setHeader|Content-Type:application/json|
| POST | /v1/individuals/create?sid=$sessionId&study=$study |200|  Content-Type: application/json ||
|let|individualId|js|response.jsonbody.response[0].result[0].id||

!3 Create First Family 
!|Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$familyName", "father" : {"name":"$fatherName", "sex" :"MALE"}, "mother": {"name":"$motherName","sex":"FEMALE"}}|
| setHeader|Content-Type:application/json|
| POST | /v1/families/create?sid=$sessionId&study=$study |200|  Content-Type: application/json ||
|let|familyId|js|response.jsonbody.response[0].result[0].id||

!3 Create Second Family 
!|Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$familyName2"}|
| setHeader|Content-Type:application/json|
| POST | /v1/families/create?sid=$sessionId&study=$study |200|  Content-Type: application/json ||
|let|familyId2|js|response.jsonbody.response[0].result[0].id||

!3 Get First Family 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId'|

!3 Update First Family
!|Table: Rest Fixture | $baseURL |
| setBody | {"name" : "$updatedName"}|
| setHeader|Content-Type:application/json|
| POST | /v1/families/$familyId/update?sid=$sessionId&study=$study |200|  Content-Type: application/json ||
|let||js|response.jsonbody.response[0].result[0].name|$updatedName|

!3 Get First Family After Update
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/info?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId'|

!3 Search First Family By Name
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&name=$updatedName|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId' &&  jsonbody.response[0].result[0].name == '$updatedName'|

!3 Update Second Family
!|Table: Rest Fixture | $baseURL |
| setBody | {"childrenIds" : ["$individualId"]}|
| setHeader|Content-Type:application/json|
| POST | /v1/families/$familyId2/update?sid=$sessionId&study=$study |200|  Content-Type: application/json ||

!3 Search Second Family By Name After Update
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study&name=$familyName2|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].id == '$familyId2' && jsonbody.response[0].result[0].children[0].id == '$individualId'|

!3 Get First Family ACL
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/acl?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length == '0.0'|

!3 Update (Create) First Family ACL (SET)
!|Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "VIEW",  "action": "SET",  "family": "$familyId"}|
| setHeader|Content-Type:application/json|
| POST |/v1/families/acl/$userA/update?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions[0] == 'VIEW'|

!3 Update First Family ACL (ADD)
!|Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "DELETE",  "action": "ADD",  "family": "$familyId"}|
| setHeader|Content-Type:application/json|
| POST |/v1/families/acl/$userA/update?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions.length == '2.0'|

!3 Update First Family ACL (REMOVE)
!|Table: Rest Fixture | $baseURL |
| setBody | {  "permissions": "DELETE",  "action": "REMOVE",  "family": "$familyId"}|
| setHeader|Content-Type:application/json|
| POST |/v1/families/acl/$userA/update?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions.length == '1.0'|

!3 Get Member ACL
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/acl?sid=$sessionId&member=$userA|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result[0].member == '$userA' && jsonbody.response[0].result[0].permissions[0] == 'VIEW'|

!3 Get First Family ACL
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/acl?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length == '1.0'|

!3 Get Second Family ACL
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId2/acl?sid=$sessionId|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length == '0.0'|

!3 Search All Families
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/search?sid=$sessionId&study=$study|200|  Content-Type: application/json |jsonbody.error == '' && jsonbody.response[0].result.length > '0.0'|

!3 (Negative) Get Non-Existing Family 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/5425/info?sid=$sessionId|500|  Content-Type: application/json |jsonbody.error == 'Family id \'5425\' does not exist'|

!3 (Negative) Get Non-Existing Family ACL
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/25152/acl?sid=$sessionId|500|  Content-Type: application/json |jsonbody.error == 'Family id \'25152\' does not exist'|

!3 Create Variable Set  
!|Table: Rest Fixture  | $baseURL |
| setBody |  {  "unique": false,  "name": "$vsName",  "description": "string",  "variables": [{"name": "var_int", "type" : "INTEGER", "defaultValue" : "10" , "required" : false,"multiValue": false } , {"name": "var_double", "type" : "DOUBLE", "defaultValue" : "20.5" , "required" : false,"multiValue": false }]}|
| setHeader|Content-Type:application/json|
| POST | /v1/variableset/create?sid=$sessionId&study=$study |200| Content-Type : application/json||
|let|variableSetId|js|response.jsonbody.response[0].result[0].id||

!3 Create Annotation Set
!|Table: Rest Fixture  | $baseURL |
| setBody | {  "name": "$asName",  "annotations": {"var_int": "10"}}|
| setHeader|Content-Type:application/json|
| POST | /v1/families/$familyId/annotationsets/create?sid=$sessionId&variableSetId=$variableSetId&study=$studyId |200| Content-Type : application/json|jsonbody.response[0].result[0].annotations.length == '2.0'|
|let|annotationSetName|js|response.jsonbody.response[0].result[0].name||

!3 (Negative) Create Annotation Set with Invalid Data Type
!|Table: Rest Fixture  | $baseURL |
| setBody | {  "name": "dummyName",  "annotations": {"var_int": "TRUE"}}|
| setHeader|Content-Type:application/json|
| POST | /v1/families/$familyId/annotationsets/create?sid=$sessionId&variableSetId=$variableSetId&study=$studyId |500| Content-Type : application/json|jsonbody.error == 'Value TRUE is not an integer number'|

!3 Get Annotation Set 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/$annotationSetName/info?sid=$sessionId|200|  Content-Type: application/json |jsonbody.response[0].result[0].annotations.length == '2.0'|

!3 Search Annotation Set 
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId|200|  Content-Type: application/json |jsonbody.response[0].result[0].name == '$annotationSetName'|

# Not yet implemented
#!3 Update Annotation Set
#!|Table: Rest Fixture  | $baseURL |
#| setBody |{"annotations": {"var_double": "100.50"}}|
#| setHeader|Content-Type:application/json|
#| POST | /v1/families/$familyId/annotationsets/$annotationSetName/update?sid=$sessionId&study=$studyId |200| Content-Type : application/json||

!3 Get Annotation Set After Update
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/$annotationSetName/info?sid=$sessionId|200|  Content-Type: application/json |jsonbody.response[0].result[0].annotations.length == '2.0'|

!3 Delete Annotation Set
!|Table: Rest Fixture  | $baseURL |
| setHeader|Content-Type:application/json|
| GET | /v1/families/$familyId/annotationsets/$annotationSetName/delete?sid=$sessionId&study=$studyId |200| Content-Type : application/json||

!3 Search Annotation Set After Delete
!|Table: Rest Fixture | $baseURL |
| GET | /v1/families/$familyId/annotationsets/search?sid=$sessionId|200|  Content-Type: application/json |jsonbody.response[0].result.length == '0.0'|
